-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("2186ed42-35da-4479-92f1-941a1bd6c790",
	'subsuperFormalization',
	3811,
	'subsuperFormalization',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("3c09a6e4-06d6-4684-9df5-90be01d554ef",
	"2186ed42-35da-4479-92f1-941a1bd6c790",
	'getID',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'// Checks the referential attributes connected to this formalization against
// the identifier attributes for the target object
// A subsuper formalization is complete when each subtype has a referential
// attribute for each attribute in an identifier of the supertype class
// returns -1 if incomplete. else, returns the identifier number

ret = -1;

subsup = self.rel;
select one sup_obj related by subsup->R_SUPER[R212]->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201];
select many sub_objs related by subsup->R_SUB[R213]->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201];

// select all attributes for ID1
select any o_id1 related by sup_obj->O_ID[R104] where ( selected.Oid_ID == 0 );
select many o_attrs related by o_id1->O_ATTR[R105];
select many identifier_ras from instances of referentialAttribute where
  ( ( selected.o_obj == sup_obj ) and
  ( selected.identifier1 or selected.identifier2 or selected.identifier3 ) );  

// If a formalization exists for these identifier_ras, then they are NOT ready.
select any formalization related by identifier_ras->formalization[R3811];
if ( not_empty formalization )
  return -1;
end if;

complete = true;
for each sub_obj in sub_objs
  // Detect when formalization is NOT ready.
  // If a referential attribute that is an identifier attribute has not
  // been processed (by migrating from O_ATTR to O_RATTR as part of this
  // masl2xtuml conversion code), then wait to formalize this association.
  for each o_attr in o_attrs
    for each identifier_ra in identifier_ras
      if ( identifier_ra.Name == o_attr.Root_Nam )
        select one o_rattr related by o_attr->O_RATTR[R106];
        if ( empty o_rattr )
          return -1; // participant identifier referential is not in place yet
        end if;
      end if;
    end for;
  end for;
  select many ras related by self->formalization[R3810]->referentialAttribute[R3811] where ( selected.o_obj == sub_obj );
  complete = formalization::compareAttrSets( o_attrs:o_attrs, ras:ras ); 
  if ( false == complete )
    break;
  end if;
end for;
if ( true == complete )
  ret = 0;
else
  // check ID2
  select any o_id2 related by sup_obj->O_ID[R104] where ( selected.Oid_ID == 1 );
  select many o_attrs related by o_id2->O_ATTR[R105];
  complete = true;
  for each sub_obj in sub_objs
	select many ras related by self->formalization[R3810]->referentialAttribute[R3811] where ( selected.o_obj == sub_obj );
    // Detect when formalization is NOT ready.
    for each o_attr in o_attrs
      for each identifier_ra in identifier_ras
        if ( identifier_ra.Name == o_attr.Root_Nam )
          select one o_rattr related by o_attr->O_RATTR[R106];
          if ( empty o_rattr )
            return -1; // participant identifier referential is not in place yet
          end if;
        end if;
      end for;
    end for;
	complete = formalization::compareAttrSets( o_attrs:o_attrs, ras:ras );
	if ( false == complete )
	  break;
	end if;
  end for;
  if ( true == complete )
	ret = 1;
  else
    // check ID3
	select any o_id3 related by sup_obj->O_ID[R104] where ( selected.Oid_ID == 2 );
	select many o_attrs related by o_id3->O_ATTR[R105];
	complete = true;
	for each sub_obj in sub_objs
	  select many ras related by self->formalization[R3810]->referentialAttribute[R3811] where ( selected.o_obj == sub_obj );
      // Detect when formalization is NOT ready.
      for each o_attr in o_attrs
        for each identifier_ra in identifier_ras
          if ( identifier_ra.Name == o_attr.Root_Nam )
            select one o_rattr related by o_attr->O_RATTR[R106];
            if ( empty o_rattr )
              return -1; // participant identifier referential is not in place yet
            end if;
          end if;
        end for;
      end for;
	  complete = formalization::compareAttrSets( o_attrs:o_attrs, ras:ras );
	  if ( false == complete )
		break;
	  end if;
	end for;
	if ( true == complete )
	  ret = 2;
	end if;
  end if;
end if;

return ret;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_NBATTR
	VALUES ("e1e453a0-29d6-44e6-96ee-ef4d4b697e37",
	"2186ed42-35da-4479-92f1-941a1bd6c790");
INSERT INTO O_BATTR
	VALUES ("e1e453a0-29d6-44e6-96ee-ef4d4b697e37",
	"2186ed42-35da-4479-92f1-941a1bd6c790");
INSERT INTO O_ATTR
	VALUES ("e1e453a0-29d6-44e6-96ee-ef4d4b697e37",
	"2186ed42-35da-4479-92f1-941a1bd6c790",
	"00000000-0000-0000-0000-000000000000",
	'rel',
	'',
	'',
	'rel',
	0,
	"8f3b0ab8-e566-4e03-9159-7047140c04a7",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("8f3b0ab8-e566-4e03-9159-7047140c04a7",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Subtype Supertype Association>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Association/Association.xtuml');
INSERT INTO O_ID
	VALUES (0,
	"2186ed42-35da-4479-92f1-941a1bd6c790");
INSERT INTO O_ID
	VALUES (1,
	"2186ed42-35da-4479-92f1-941a1bd6c790");
INSERT INTO O_ID
	VALUES (2,
	"2186ed42-35da-4479-92f1-941a1bd6c790");
INSERT INTO PE_PE
	VALUES ("2186ed42-35da-4479-92f1-941a1bd6c790",
	1,
	"1800b076-78da-4923-9981-c067ad8e1b87",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("1800b076-78da-4923-9981-c067ad8e1b87",
	"c14b4fcc-99ce-417f-85d7-ac22e2d20288",
	"c14b4fcc-99ce-417f-85d7-ac22e2d20288",
	'm2x',
	'',
	0,
	'../m2x.xtuml');
