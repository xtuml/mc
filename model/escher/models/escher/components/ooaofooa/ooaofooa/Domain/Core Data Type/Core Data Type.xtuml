-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("7a323f48-a582-4321-99af-6f0487fab022",
	'Core Data Type',
	10,
	'S_CDT',
	'Core Data Types are those data types which are fundamental, or core, to all data types.  The core data types are built-in to the tool and cannot be changed.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_NBATTR
	VALUES ("5d8f08d6-8c47-436f-aab5-2b57163b5516",
	"7a323f48-a582-4321-99af-6f0487fab022");
INSERT INTO O_BATTR
	VALUES ("5d8f08d6-8c47-436f-aab5-2b57163b5516",
	"7a323f48-a582-4321-99af-6f0487fab022");
INSERT INTO O_ATTR
	VALUES ("5d8f08d6-8c47-436f-aab5-2b57163b5516",
	"7a323f48-a582-4321-99af-6f0487fab022",
	"272b83db-87fe-413a-8f13-a035f2b7b39a",
	'Core_Typ',
	'Full Name: Core Type
Description: The core BridgePoint type for the data type
Data Domain: 0 = void, 1 = boolean, 2 = integer, 3 = real, 4 = string, 5 = unique_id, 6 = current_state, 7 = same_as_base, 8 = inst_ref\<Object\>, 9 = inst_ref_set\<Object\>, 10 = inst\<Event\>, 11 = inst\<Mapping\>, 12 = inst_ref\<Mapping\>, 13 = component_ref

enum0: void
enum1: boolean
enum2: integer
enum3: real
enum4: string
enum5: unique_id
enum6: state<State_Model>
enum7:  same_as<Base_Attribute>
enum8: inst_ref<Object>
enum9: inst_ref_set<Object>
enum10: inst<Event>
enum11: inst<Mapping>
enum12: inst_ref<Mapping>
enum13: component_ref
impl_detail: true
readonly: true',
	'',
	'Core_Typ',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_REF
	VALUES ("7a323f48-a582-4321-99af-6f0487fab022",
	"a2fcb0c7-a33d-4861-ac4c-36985f92521a",
	0,
	"157b0c17-0bd7-4836-aeab-8b41b7afb264",
	"b3676623-87dc-4114-9181-73793318fdd4",
	"d2d4eecc-4cce-4f00-b994-491c57957426",
	"c23c2a66-b686-413e-9f69-54ee37b28446",
	"272b83db-87fe-413a-8f13-a035f2b7b39a",
	"4eb19582-2a5b-48c9-83d4-667e770ec5a3",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Data Type',
	'DT_ID',
	'R17');
INSERT INTO R_RGO_PROXY
	VALUES ("7a323f48-a582-4321-99af-6f0487fab022",
	"b3676623-87dc-4114-9181-73793318fdd4",
	"d2d4eecc-4cce-4f00-b994-491c57957426",
	'../Domain.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("157b0c17-0bd7-4836-aeab-8b41b7afb264",
	"a2fcb0c7-a33d-4861-ac4c-36985f92521a",
	0,
	"b3676623-87dc-4114-9181-73793318fdd4",
	"c23c2a66-b686-413e-9f69-54ee37b28446",
	'../Domain.xtuml');
INSERT INTO O_RATTR
	VALUES ("272b83db-87fe-413a-8f13-a035f2b7b39a",
	"7a323f48-a582-4321-99af-6f0487fab022",
	"10876fab-1b74-4366-9d45-f2779fe993c7",
	"a0b3f5fd-8d11-4269-90dc-c38e909bb134",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("10876fab-1b74-4366-9d45-f2779fe993c7",
	"a0b3f5fd-8d11-4269-90dc-c38e909bb134",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("272b83db-87fe-413a-8f13-a035f2b7b39a",
	"7a323f48-a582-4321-99af-6f0487fab022",
	"00000000-0000-0000-0000-000000000000",
	'DT_ID',
	'',
	'',
	'Element_ID',
	2,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"7a323f48-a582-4321-99af-6f0487fab022");
INSERT INTO O_OIDA
	VALUES ("272b83db-87fe-413a-8f13-a035f2b7b39a",
	"7a323f48-a582-4321-99af-6f0487fab022",
	0,
	'DT_ID');
INSERT INTO O_ID
	VALUES (1,
	"7a323f48-a582-4321-99af-6f0487fab022");
INSERT INTO O_ID
	VALUES (2,
	"7a323f48-a582-4321-99af-6f0487fab022");
INSERT INTO PE_PE
	VALUES ("7a323f48-a582-4321-99af-6f0487fab022",
	1,
	"ee1f21a2-2b66-42cf-8123-6ef271f3113c",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("ee1f21a2-2b66-42cf-8123-6ef271f3113c",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'Domain',
	'A domain (S_DOM) consists of one or more subsystems (S_SS) that each contain an information model that abstracts a portion of the data for the domain: classes (O_OBJ), associations (R_REL), etc.  Breaking a domain into subsystems allows the complexity of the domain to be more easily managed: 1) subsystems are components and can be checked out individually allowing parallelism in development of the models and 2) breaking up a domain into smaller units is easier to understand.  A subsystem is composed of classes that tend to cluster, i.e., they have few associations that span subsystem boundaries.  Inter-subsystem associations, communications, and accesses are captured in the Subsystem Relationship Model (SRM), Subsystem Communication Model (SCM), and Subsystem Access Model (SAM) respectively.',
	1,
	'../Domain.xtuml');
