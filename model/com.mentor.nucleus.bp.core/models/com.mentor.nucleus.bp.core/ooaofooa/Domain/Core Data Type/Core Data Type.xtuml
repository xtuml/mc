-- BP 7.1 content: ModelClass syschar: 3 persistence-version: 7.1.5

INSERT INTO O_OBJ
	VALUES ("af9b2e82-f3b4-4227-943d-0d5781594f36",
	'Core Data Type',
	10,
	'S_CDT',
	'Core Data Types are those data types which are fundamental, or core, to all data types.  The core data types are built-in to the tool and cannot be changed.',
	"703df30a-ee7e-44ec-a7cf-22d2171bb270");
INSERT INTO O_NBATTR
	VALUES ("d55238af-06e8-4baf-8163-37fbd79a0327",
	"af9b2e82-f3b4-4227-943d-0d5781594f36");
INSERT INTO O_BATTR
	VALUES ("d55238af-06e8-4baf-8163-37fbd79a0327",
	"af9b2e82-f3b4-4227-943d-0d5781594f36");
INSERT INTO O_ATTR
	VALUES ("d55238af-06e8-4baf-8163-37fbd79a0327",
	"af9b2e82-f3b4-4227-943d-0d5781594f36",
	"f49df176-7374-4f58-89db-8bc71e3b9536",
	'Core_Typ',
	'Full Name: Core Type
Description: The core BridgePoint type for the data type
Data Domain: 0 = void, 1 = boolean, 2 = integer, 3 = real, 4 = string, 5 = unique_id, 6 = current_state, 7 = same_as_base, 8 = inst_ref\<Object\>, 9 = inst_ref_set\<Object\>, 10 = inst\<Event\>, 11 = inst\<Mapping\>, 12 = inst_ref\<Mapping\>, 13 = component_ref

enum0: void
enum1: boolean
enum2: integer
enum3: real
enum4: string
enum5: unique_id
enum6: state<State_Model>
enum7:  same_as<Base_Attribute>
enum8: inst_ref<Object>
enum9: inst_ref_set<Object>
enum10: inst<Event>
enum11: inst<Mapping>
enum12: inst_ref<Mapping>
enum13: component_ref
impl_detail: true
readonly: true',
	'',
	'Core_Typ',
	0,
	"79904a6c-8631-4ce7-a3ee-faf5eaa46dd8",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("79904a6c-8631-4ce7-a3ee-faf5eaa46dd8",
	"d6e77a0a-4222-4ed5-87a0-cc22fcb66c43",
	'integer',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_REF
	VALUES ("af9b2e82-f3b4-4227-943d-0d5781594f36",
	"ead52fac-9782-434b-a35c-c07452c3b26d",
	0,
	"0e78201f-a7cd-497b-a6b4-e224ab7915c2",
	"d6c3e414-a5f5-4db1-97d8-868f18679833",
	"2a334b49-33cd-45bf-bd3f-62d236dad6c0",
	"627178cc-3387-40aa-bd45-b2f324c8e5bd",
	"f49df176-7374-4f58-89db-8bc71e3b9536",
	"ef869173-7e7c-4128-859c-1c0a6db79137",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Data Type',
	'DT_ID',
	'R17');
INSERT INTO R_RGO_PROXY
	VALUES ("af9b2e82-f3b4-4227-943d-0d5781594f36",
	"d6c3e414-a5f5-4db1-97d8-868f18679833",
	"2a334b49-33cd-45bf-bd3f-62d236dad6c0",
	'../Domain.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("0e78201f-a7cd-497b-a6b4-e224ab7915c2",
	"ead52fac-9782-434b-a35c-c07452c3b26d",
	0,
	"d6c3e414-a5f5-4db1-97d8-868f18679833",
	"627178cc-3387-40aa-bd45-b2f324c8e5bd",
	'../Domain.xtuml');
INSERT INTO O_RATTR
	VALUES ("f49df176-7374-4f58-89db-8bc71e3b9536",
	"af9b2e82-f3b4-4227-943d-0d5781594f36",
	"5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	1,
	'Element_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("5776264f-c7e9-4abe-839f-24d0750e007c",
	"5ada8d43-9e86-43cb-91a2-fac19a8e30f6",
	'../../Packageable Element/Packageable Element/Packageable Element.xtuml');
INSERT INTO O_ATTR
	VALUES ("f49df176-7374-4f58-89db-8bc71e3b9536",
	"af9b2e82-f3b4-4227-943d-0d5781594f36",
	"00000000-0000-0000-0000-000000000000",
	'DT_ID',
	'',
	'',
	'Element_ID',
	2,
	"df379511-9dda-46ee-a114-9d591239938d",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("df379511-9dda-46ee-a114-9d591239938d",
	"d6e77a0a-4222-4ed5-87a0-cc22fcb66c43",
	'same_as<Base_Attribute>',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_ID
	VALUES (0,
	"af9b2e82-f3b4-4227-943d-0d5781594f36");
INSERT INTO O_OIDA
	VALUES ("f49df176-7374-4f58-89db-8bc71e3b9536",
	"af9b2e82-f3b4-4227-943d-0d5781594f36",
	0,
	'DT_ID');
INSERT INTO O_ID
	VALUES (1,
	"af9b2e82-f3b4-4227-943d-0d5781594f36");
INSERT INTO O_ID
	VALUES (2,
	"af9b2e82-f3b4-4227-943d-0d5781594f36");
INSERT INTO S_SS_PROXY
	VALUES ("703df30a-ee7e-44ec-a7cf-22d2171bb270",
	'Domain',
	'A domain (S_DOM) consists of one or more subsystems (S_SS) that each contain an information model that abstracts a portion of the data for the domain: classes (O_OBJ), associations (R_REL), etc.  Breaking a domain into subsystems allows the complexity of the domain to be more easily managed: 1) subsystems are components and can be checked out individually allowing parallelism in development of the models and 2) breaking up a domain into smaller units is easier to understand.  A subsystem is composed of classes that tend to cluster, i.e., they have few associations that span subsystem boundaries.  Inter-subsystem associations, communications, and accesses are captured in the Subsystem Relationship Model (SRM), Subsystem Communication Model (SCM), and Subsystem Access Model (SAM) respectively.',
	'S',
	1,
	"d6e77a0a-4222-4ed5-87a0-cc22fcb66c43",
	"00000000-0000-0000-0000-000000100002",
	'../Domain.xtuml');
