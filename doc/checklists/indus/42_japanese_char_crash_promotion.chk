<pre>
========================================================================

File:      promotion.chk 

========================================================================
xtUML Project Checklist
Promoting an Issue

Abstract
--------
This procedure is used when promoting an issue.
Promoting an issue is defined as moving the work associated with an issue
from a local machine or branch into the main/master RCS branch. 


Checklist
---------
x- Go to the repository on github.  Select the pull request(s).  Note that 
   there may be multiple requests if the issue spans multiple git repositories.  
   Record the pull request(s) URL here:
            Pull Request Issue URL: https://github.com/xtuml/mc/pull/43

x- Verify that all required process documentation exists for this issue.  That
   is: analysis note, design note, implementation note, review minutes, and
   checklists.  Remember that, depending on the complexity of the issue, some
   notes are not required.
   This documentation will be found in the issues branch.
   Open the issues implementation notes to help guide you through the branch 
   names used.

x- Verify and merge the change:
	x- Option 1
	   If the issue does not involve model file changes, and is small it can 
	   be merged using the github web interface:  
		x- Locate the pull request on git hub 
		   (https://github.com/xtuml/internal/pulls)
		x- Select the pull request
		x- Select the "Files Changed" and review the changes too assure the files
		   changed match the implementation note.
	    x- Select the "Merge  Pull Request" option
	    
		
	_- Option 2
	   If the issue does involve model files and/or it is not small then the 
	   change must be merged, built and tested on the local workspace: 
		
	  	_- Check out master
		_- Update your local repository with the latest files from github using 
	       git pull  
	  	_- Merge the remote branch(s) into master.  
			_- Open the Git Repository Exploring perspective
			_- Select the repository
			_- Right-click > Merge... > Remote Tracking
			_- Select the branch name
			_- Assure the option to commit the result is selected
			_- Select Merge
			_R Merge is completed into the local repository
	  	_- Build
	  	
*** NOTE: THIS IS A TEMPORARY STEP UNTIL WE GET ALL THE JUNITS RUNNING ***
***   NIGHTLY ON THE SERVER.  AFTER WE DO THAT WE WILL SIMPLY RUN THE
***   TESTS on the build server after promotion.                       ***
x- Execute the specific unit tests agreed upon with the code reviewers and 
      verify that the tests pass.
x- Update the test_results/Unit_test_summary.txt with the branch name check it in here:
	  github.com/xtuml/<repository>/doc-<repository>/qa/<release_id>/<issue num>/promotion/Unit_test_summary.txt

x- When tests pass the changes can be pushed.
  	  	   NOTE:  
	  	   If testing does not pass work with the engineer to resolve the 
	  	   problem.   If it is a small issue you can commit it directly to the 
	  	   local repository and retest. 
	  	   If it is not a small problem you can ask the engineer to close the 
	  	   pull request (this option is found at the bottom of the pull 
	  	   request page).  In this case, you will roll-back the changes in
	  	   your local repository why the engineer fixes the problem.  To roll 
	  	   back the changes:
	  	   		git reset ---hard origin/master
	  	   		
	
x- If the github issue is a mirror of a CQ issue, you must perform the following
   steps.  If not, skip to the next section.
   
   x- Log into ClearQuest and enter the defect number to go to the issue.

  x- Select "Change State->Resolve"

    x- On the Resolution tab, fill in the fields as follows:
      x- Resolution = Fixed
      x- Fixed Version = "the target release version" (Should be the current
                       version of the plugin)
      x- Resolution Note:
        x- Summary = "none required"
        x- Note = Promoted with pull request: https://github.com/xtuml/mc/pull/43
      
    _- On the Customer tab:
      _- Check if a customer service request is specified.  If there is no SR, 
         the following steps may be skipped.
      _- If an SR is specified, enter a Customer note:
        _- Summary = <none required>
        _- Note = This issue has been resolved and shall be present in the next release.
      
    x- "Save" the changes to the DEI
      
x- Navigate to the issue(s) in the github Issues tracker.
  x- Verify that the upcoming milestone is set for the issue. Apply it if not 
     yet set.
  x- Close the issue 

x- Check in this file under
   github.com/xtuml/<repository>/doc-<repository>/checklists/<release_id>/<issue num>-promotion.chk

End
---

</pre>
